import os
import pickle
import numpy as np
import torch
import cv2

def draw_multi_box(img, box_coordinates):
    point_color1 = (255, 255, 0)  # BGR
    point_color2 = (255, 0, 255)  # BGR
    thickness = 2
    lineType = 4
    for i in range(len(box_coordinates)):
        center = (box_coordinates[i, 1].item(), box_coordinates[i, 2].item())
        size = (box_coordinates[i, 3].item(), box_coordinates[i, 4].item())
        angle = box_coordinates[i, 5].item()
        box = cv2.boxPoints((center, size, angle))
        box = np.int64(box)
        cv2.line(img, box[0], box[3], point_color1, thickness, lineType)
        cv2.line(img, box[3], box[2], point_color2, thickness, lineType)
        cv2.line(img, box[2], box[1], point_color1, thickness, lineType)
        cv2.line(img, box[1], box[0], point_color2, thickness, lineType)
    cv2.imshow("Image", img)
    cv2.waitKey(0)
    cv2.destroyAllWindows()


files = ['demo/demo_in_the_wild/in_the_wild_nbmod.png']

chosen_files = np.random.choice(files, 1)
for file in chosen_files:
    img = cv2.imread(file)

    all_grasp = []

    grasp = [

[[0.9745060801506042,
  83.7889404296875,
  85.01045227050781,
  72.63341522216797,
  18.55002212524414,
  23.162214279174805],
 [0.9888761639595032,
  133.08108520507812,
  88.43235778808594,
  92.01976776123047,
  23.223588943481445,
  0.4045017659664154],
 [0.9971729516983032,
  134.48678588867188,
  90.99560546875,
  86.27429962158203,
  19.0778751373291,
  158.16671752929688],
 [0.9810730218887329,
  139.0737762451172,
  93.92237854003906,
  78.14533233642578,
  18.428882598876953,
  169.32907104492188],
 [0.9665969610214233,
  70.22027587890625,
  111.81195068359375,
  74.62234497070312,
  18.54073143005371,
  1.1204057931900024],
 [0.9830137491226196,
  71.04440307617188,
  118.15216064453125,
  71.04159545898438,
  15.431361198425293,
  176.48268127441406],
 [0.9539399147033691,
  80.71595764160156,
  120.53901672363281,
  77.5011978149414,
  17.536216735839844,
  174.84852600097656],
 [0.970710813999176,
  137.32748413085938,
  109.20692443847656,
  94.81292724609375,
  17.59813690185547,
  0.5003962516784668],
 [0.9959235191345215,
  137.18853759765625,
  102.88133239746094,
  84.24759674072266,
  19.325923919677734,
  165.37962341308594],
 [0.9911680221557617,
  142.41403198242188,
  119.84130859375,
  82.8901138305664,
  17.02758026123047,
  0.0162835530936718],
 [0.999685525894165,
  142.48312377929688,
  115.6001968383789,
  75.24844360351562,
  16.979724884033203,
  172.29869079589844],
 [0.9892436265945435,
  91.31611633300781,
  140.22889709472656,
  70.95127868652344,
  17.38331413269043,
  142.28811645507812],
 [0.9748224020004272,
  133.91839599609375,
  144.0883331298828,
  71.62767791748047,
  16.919586181640625,
  4.448776721954346],
 [0.9905458688735962,
  133.78140258789062,
  142.4794921875,
  77.66302490234375,
  20.578004837036133,
  166.69497680664062],
 [0.9993008375167847,
  142.9666748046875,
  142.67349243164062,
  71.37652587890625,
  19.40066909790039,
  0.30801481008529663],
 [0.9979769587516785,
  143.514404296875,
  137.72789001464844,
  75.0760269165039,
  18.8726863861084,
  177.60421752929688],
 [0.985975444316864,
  135.22604370117188,
  169.97840881347656,
  76.84612274169922,
  17.642602920532227,
  5.558490753173828],
 [0.964447021484375,
  135.2679443359375,
  169.2379608154297,
  80.5140151977539,
  19.188613891601562,
  111.95045471191406],
 [0.9991480112075806,
  136.20175170898438,
  169.43515014648438,
  75.72178649902344,
  20.084522247314453,
  152.59173583984375],
 [0.9852789640426636,
  142.33897399902344,
  173.3394317626953,
  78.27799987792969,
  18.069440841674805,
  0.01484912820160389],
 [0.9999024868011475,
  142.9915771484375,
  179.2072296142578,
  71.79671478271484,
  18.357772827148438,
  162.19931030273438],
 [0.9870474338531494,
  157.66094970703125,
  199.90914916992188,
  96.35535430908203,
  17.924654006958008,
  0.017688149586319923],
 [0.9999604225158691,
  160.90321350097656,
  197.59173583984375,
  71.29438018798828,
  17.661863327026367,
  152.91561889648438],
 [0.9964454770088196,
  172.29425048828125,
  220.1477813720703,
  66.09976959228516,
  17.28848648071289,
  144.6192169189453],
 [0.9721798300743103,
  182.28460693359375,
  236.98123168945312,
  85.68658447265625,
  15.747389793395996,
  0.3336780369281769],
 [0.9998051524162292,
  183.82037353515625,
  234.48043823242188,
  71.80750274658203,
  17.496152877807617,
  147.93019104003906],
 [0.9975957274436951,
  198.91294860839844,
  259.81231689453125,
  71.59678649902344,
  17.453445434570312,
  158.4920196533203],
 [0.9968709349632263,
  208.15078735351562,
  277.2290344238281,
  67.6906967163086,
  16.730676651000977,
  149.80006408691406],
 [0.9987971782684326,
  227.8133544921875,
  299.2830505371094,
  69.871337890625,
  16.954769134521484,
  151.38926696777344],
 [0.9715422987937927,
  237.35110473632812,
  315.2198486328125,
  67.0566635131836,
  16.981168746948242,
  148.5439910888672],
 [0.9992425441741943,
  251.74847412109375,
  332.3113708496094,
  66.29833984375,
  15.420772552490234,
  147.95274353027344]]

]
    
    print(grasp)
    all_grasp += grasp

    all_grasp = torch.tensor(all_grasp)
    draw_multi_box(img, all_grasp)
